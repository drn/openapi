info:
  title: Opkit
  version: 1.0.0
  description: >-
    Opkit is a platform for collecting and verifying patient health insurance details.
  contact:
    email: founders@opkit.co
externalDocs:
  url: https://docs.opkit.co/
servers:
  - url: https://api.opkit.co/v1
tags:
  - name: Patients
  - name: Insurance Cards
  - name: Insurance Carriers
  - name: Extractions
  - name: Electronic Eligibility Checks
  - name: Clearinghouse Entities
  - name: Electronic Eligibility Discoveries
  - name: Insurance Plan Statuses
  - name: Submissions
  - name: Settings
openapi: "3.0.0"
paths:
  /settings:
    get:
      summary: Get settings
      tags:
        - Settings
      operationId: getSettings
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSettingsResponse"
  /electronic_eligibility_discoveries/{id}:
    get:
      summary: Get an electronic eligibility discovery
      tags:
        - Electronic Eligibility Discoveries
      operationId: getElectronicEligibilityDiscoveriesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A single electronic eligibility discovery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetElectronicEligibilityDiscoveriesIdResponse"
  /extractions/{id}:
    get:
      summary: Get an extraction
      tags:
        - Extractions
      operationId: getExtractionsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A single extraction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtractionsIdResponse"
  /insurance_plan_statuses:
    get:
      summary: Get insurance_plan_statuses
      tags:
        - Insurance Plan Statuses
      operationId: getInsurancePlanStatuses
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: insurance_card_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of insurance plan statuses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInsurancePlanStatusesResponse"
  /electronic_eligibility_discoveries:
    get:
      summary: Get electronic eligibility discoveries
      tags:
        - Electronic Eligibility Discoveries
      operationId: getElectronicEligibilityDiscoveries
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: insurance_card_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of electronic eligibility discoveries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetElectronicEligibilityDiscoveriesResponse"
    post:
      summary: Create an electronic eligibility discovery
      tags:
        - Electronic Eligibility Discoveries
      operationId: postElectronicEligibilityDiscoveries
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PostElectronicEligibilityDiscoveriesPayload"
      responses:
        200:
          description: A single electronic eligibility discovery
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostElectronicEligibilityDiscoveriesResponse"
  /extractions:
    get:
      summary: Get extractions
      tags:
        - Extractions
      operationId: getExtractions
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: insurance_card_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of extractions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExtractionsResponse"
    post:
      summary: Create an extraction
      tags:
        - Extractions
      operationId: postExtractions
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PostExtractionsPayload"
      responses:
        200:
          description: A single extraction
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostExtractionsResponse"
  /patients/{id}:
    patch:
      summary: Update a patient
      tags:
        - Patients
      operationId: patchPatientsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PatchPatientsIdPayload"
      responses:
        200:
          description: A single patient
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatchPatientsIdResponse"
    get:
      summary: Get a patient
      tags:
        - Patients
      operationId: getPatientsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A single patient
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPatientsIdResponse"
    delete:
      summary: Delete a patient
      tags:
        - Patients
      operationId: deletePatientsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successfully deleted
  /patients:
    get:
      summary: Get patients
      tags:
        - Patients
      operationId: getPatients
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: reference_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of patients
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPatientsResponse"
    post:
      summary: Create a patient
      tags:
        - Patients
      operationId: postPatients
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PostPatientsPayload"
      responses:
        200:
          description: A single patient
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostPatientsResponse"
  /clearinghouse_entities:
    get:
      summary: Get clearinghouse entities
      tags:
        - Clearinghouse Entities
      operationId: getInsuranceCarriers
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of clearinghouse entities
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetClearinghouseEntitiesResponse"
  /insurance_carriers:
    get:
      summary: Get insurance carriers
      tags:
        - Insurance Carriers
      operationId: getInsuranceCarriers
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of insurance carriers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInsuranceCarriersResponse"
  /insurance_cards:
    get:
      summary: Get insurance cards
      tags:
        - Insurance Cards
      operationId: getInsuranceCards
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: submission_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: patient_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of insurance cards
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInsuranceCardsResponse"
    post:
      summary: Create an insurance card
      tags:
        - Insurance Cards
      operationId: postInsuranceCards
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PostInsuranceCardsPayload"
      responses:
        200:
          description: A single insurance card
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostInsuranceCardsResponse"
  /insurance_cards/{id}:
    get:
      summary: Get a single insurance card
      tags:
        - Insurance Cards
      operationId: getInsuranceCardsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A single insurance card
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInsuranceCardsIdResponse"
    patch:
      summary: Update an insurance card
      tags:
        - Insurance Cards
      operationId: patchInsuranceCardsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PatchInsuranceCardsIdPayload"
      responses:
        200:
          description: A single insurance card
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatchInsuranceCardsIdResponse"
    delete:
      summary: Delete an insurance card
      tags:
        - Insurance Cards
      operationId: deleteInsuranceCardsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successfully deleted
  /submissions:
    get:
      summary: Get submissions
      tags:
        - Submissions
      operationId: getSubmissions
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of submissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSubmissionsResponse"
  /submissions/{id}:
    get:
      summary: Get a single submission
      tags:
        - Submissions
      operationId: getSubmissionsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A single submission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSubmissionsIdResponse"
  /electronic_eligibility_checks:
    get:
      summary: Get electronic eligibility checks
      tags:
        - Electronic Eligibility Checks
      operationId: getElectronicEligibilityChecks
      parameters:
        - name: after
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: insurance_card_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A list of electronic eligibility checks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetElectronicEligibilityChecksResponse"
    post:
      summary: Create an electronic eligibility check
      tags:
        - Electronic Eligibility Checks
      operationId: postElectronicEligibilityChecks
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PostElectronicEligibilityChecksPayload"
      responses:
        200:
          description: A single electronic eligibility check
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostElectronicEligibilityChecksResponse"
  /electronic_eligibility_checks/{id}:
    get:
      summary: Get a single electronic eligibility check
      tags:
        - Electronic Eligibility Checks
      operationId: getElectronicEligibilityChecksId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: A single electronic eligibility check
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetElectronicEligibilityChecksIdResponse"
components:
  schemas:
    GetInsuranceCardsResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/InsuranceCard"
        count:
          type: number
    GetSubmissionsResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Submission"
        count:
          type: number
    GetElectronicEligibilityChecksResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ElectronicEligibilityCheck"
        count:
          type: number
    GetInsuranceCardsIdResponse:
      $ref: "#/components/schemas/InsuranceCard"
    GetSubmissionsIdResponse:
      $ref: "#/components/schemas/Submission"
    GetElectronicEligibilityChecksIdResponse:
      $ref: "#/components/schemas/ElectronicEligibilityCheck"
    ExtractionStatus:
      type: string
      enum: ["in_progress", "success", "failure"]
    InsuranceCard:
      required:
        - id
        - created_at
        - source
      properties:
        reference_id:
          type: string
        id:
          type: string
          format: uuid
        source:
          $ref: "#/components/schemas/Source"
        submission_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        front_photo_download_url:
          type: string
        back_photo_download_url:
          type: string
        member_name:
          type: string
        member_id:
          type: string
        group_number:
          type: string
        insurance_carrier_name:
          type: string
        plan_name:
          type: string
        rx_bin:
          type: string
        rx_group:
          type: string
        rx_pcn:
          type: string
        dependent_names:
          type: array
          items:
            type: string
        plan_status:
          $ref: "#/components/schemas/InsurancePlanStatusValue"
        plan_status_fetched_at:
          type: string
          format: date-time
    Submission:
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
    ElectronicEligibilityCheck:
      required:
        - id
        - created_at
        - insurance_card_id
        - clearinghouse_entity_id
        - provider_npi
        - subscriber_first_name
        - subscriber_last_name
        - subscriber_date_of_birth
        - service_type_code
        - status
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        insurance_card_id:
          type: string
          format: uuid
        clearinghouse_entity_id:
          type: string
          format: uuid
        electronic_eligibility_discovery_id:
          type: string
          format: uuid
        provider_npi:
          type: string
        subscriber_first_name:
          type: string
        subscriber_last_name:
          type: string
        subscriber_date_of_birth:
          type: string
          format: date
          example: "2022-07-21"
        subscriber_member_id:
          type: string
        service_type_code:
          $ref: "#/components/schemas/X12ServiceTypeCode"
        status:
          $ref: "#/components/schemas/ElectronicEligibilityCheckStatus"
    X12ServiceTypeCode:
      type: string
      enum:
        - "1" # Medical Care
        - "2" # Surgical
        - "3" # Consultation
        - "4" # Diagnostic X-Ray
        - "5" # Diagnostic Lab
        - "6" # Radiation Therapy
        - "7" # Anesthesia
        - "8" # Surgical Assistance
        - "9" # Other Medical
        - "10" # Blood Charges
        - "11" # Used Durable Medical Equipment
        - "12" # Durable Medical Equipment Purchase
        - "13" # Ambulatory Service Center Facility
        - "14" # Renal Supplies in the Home
        - "15" # Alternate Method Dialysis
        - "16" # Chronic Renal Disease (CRD) Equipment
        - "17" # Pre-Admission Testing
        - "18" # Durable Medical Equipment Rental
        - "19" # Pneumonia Vaccine
        - "20" # Second Surgical Opinion
        - "21" # Third Surgical Opinion
        - "22" # Social Work
        - "23" # Diagnostic Dental
        - "24" # Periodontics
        - "25" # Restorative
        - "26" # Endodontics
        - "27" # Maxillofacial Prosthetics
        - "28" # Adjunctive Dental Services
        - "30" # Health Benefit Plan Coverage
        - "31" # Benefit Disclaimer
        - "32" # Plan Waiting Period
        - "33" # Chiropractic
        - "34" # Chiropractic Office Visits
        - "35" # Dental Care
        - "36" # Dental Crowns
        - "37" # Dental Accident
        - "38" # Orthodontics
        - "39" # Prosthodontics
        - "40" # Oral Surgery
        - "41" # Routine (Preventive) Dental
        - "42" # Home Health Care
        - "43" # Home Health Prescriptions
        - "44" # Home Health Visits
        - "45" # Hospice
        - "46" # Respite Care
        - "47" # Hospital
        - "48" # Hospital - Inpatient
        - "49" # Hospital - Room and Board
        - "50" # Hospital - Outpatient
        - "51" # Hospital - Emergency Accident
        - "52" # Hospital - Emergency Medical
        - "53" # Hospital - Ambulatory Surgical
        - "54" # Long Term Care
        - "55" # Major Medical
        - "56" # Medically Related Transportation
        - "57" # Air Transportation
        - "58" # Cabulance
        - "59" # Licensed Ambulance
        - "60" # General Benefits
        - "61" # In-vitro Fertilization
        - "62" # MRI/CAT Scan
        - "63" # Donor Procedures
        - "64" # Acupuncture
        - "65" # Newborn Care
        - "66" # Pathology
        - "67" # Smoking Cessation
        - "68" # Well Baby Care
        - "69" # Maternity
        - "70" # Transplants
        - "71" # Audiology Exam
        - "72" # Inhalation Therapy
        - "73" # Diagnostic Medical
        - "74" # Private Duty Nursing
        - "75" # Prosthetic Device
        - "76" # Dialysis
        - "77" # Otological Exam
        - "78" # Chemotherapy
        - "79" # Allergy Testing
        - "80" # Immunizations
        - "81" # Routine Physical
        - "82" # Family Planning
        - "83" # Infertility
        - "84" # Abortion
        - "85" # AIDS
        - "86" # Emergency Services
        - "87" # Cancer
        - "88" # Pharmacy
        - "89" # Free Standing Prescription Drug
        - "90" # Mail Order Prescription Drug
        - "91" # Brand Name Prescription Drug
        - "92" # Generic Prescription Drug
        - "93" # Podiatry
        - "94" # Podiatry - Office Visits
        - "95" # Podiatry - Nursing Home Visits
        - "96" # Professional (Physician)
        - "97" # Anesthesiologist
        - "98" # Professional (Physician) Visit - Office
        - "99" # Professional (Physician) Visit - Inpatient
        - "A0" # Professional (Physician) Visit - Outpatient
        - "A1" # Professional (Physician) Visit - Nursing Home
        - "A2" # Professional (Physician) Visit - Skilled Nursing Facility
        - "A3" # Professional (Physician) Visit - Home
        - "A4" # Psychiatric
        - "A5" # Psychiatric - Room and Board
        - "A6" # Psychotherapy
        - "A7" # Psychiatric - Inpatient
        - "A8" # Psychiatric - Outpatient
        - "A9" # Rehabilitation
        - "AA" # Rehabilitation - Room and Board
        - "AB" # Rehabilitation - Inpatient
        - "AC" # Rehabilitation - Outpatient
        - "AD" # Occupational Therapy
        - "AE" # Physical Medicine
        - "AF" # Speech Therapy
        - "AG" # Skilled Nursing Care
        - "AH" # Skilled Nursing Care - Room and Board
        - "AI" # Substance Abuse
        - "AJ" # Alcoholism
        - "AK" # Drug Addiction
        - "AL" # Vision (Optometry)
        - "AM" # Frames
        - "AN" # Routine Exam
        - "AO" # Lenses
        - "AQ" # Nonmedically Necessary Physical
        - "AR" # Experimental Drug Therapy
        - "B" # Non-escrow or Non-impound Service
        - "B1" # Burn Care
        - "B2" # Brand Name Prescription Drug - Formulary
        - "B3" # Brand Name Prescription Drug - Non-Formulary
        - "BA" # Independent Medical Evaluation
        - "BB" # Partial Hospitalization (Psychiatric)
        - "BC" # Day Care (Psychiatric)
        - "BD" # Cognitive Therapy
        - "BE" # Massage Therapy
        - "BF" # Pulmonary Rehabilitation
        - "BG" # Cardiac Rehabilitation
        - "BH" # Pediatric
        - "BI" # Nursery
        - "BJ" # Skin
        - "BK" # Orthopedic
        - "BL" # Cardiac
        - "BM" # Lymphatic
        - "BN" # Gastrointestinal
        - "BP" # Endocrine
        - "BQ" # Neurology
        - "BR" # Eye
        - "BS" # Invasive Procedures
        - "BT" # Gynecological
        - "BU" # Obstetrical
        - "BV" # Obstetrical/Gynecological
        - "BW" # Mail Order Prescription Drug: Brand Name
        - "BX" # Mail Order Prescription Drug: Generic
        - "BY" # Physician Visit - Office: Sick
        - "BZ" # Physician Visit - Office: Well
        - "C" # Escrow or Impound Service
        - "C1" # Coronary Care
        - "CA" # Private Duty Nursing - Inpatient
        - "CB" # Private Duty Nursing - Home
        - "CC" # Surgical Benefits - Professional (Physician)
        - "CD" # Surgical Benefits - Facility
        - "CE" # Mental Health Provider - Inpatient
        - "CF" # Mental Health Provider - Outpatient
        - "CG" # Mental Health Facility - Inpatient
        - "CH" # Mental Health Facility - Outpatient
        - "CI" # Substance Abuse Facility - Inpatient
        - "CJ" # Substance Abuse Facility - Outpatient
        - "CK" # Screening X-ray
        - "CL" # Screening laboratory
        - "CM" # Mammogram, High Risk Patient
        - "CN" # Mammogram, Low Risk Patient
        - "CO" # Flu Vaccination
        - "CP" # Eyewear and Eyewear Accessories
        - "CQ" # Case Management
        - "DG" # Dermatology
        - "DM" # Durable Medical Equipment
        - "DS" # Diabetic Supplies
        - "GF" # Generic Prescription Drug - Formulary
        - "GN" # Generic Prescription Drug - Non-Formulary
        - "GY" # Allergy
        - "IC" # Intensive Care
        - "MH" # Mental Health
        - "NI" # Neonatal Intensive Care
        - "ON" # Oncology
        - "PT" # Physical Therapy
        - "PU" # Pulmonary
        - "RN" # Renal
        - "RT" # Residential Psychiatric Treatment
        - "TC" # Transitional Care
        - "TN" # Transitional Nursery Care
        - "UC" # Urgent Care
    PatchPatientsIdPayload:
      properties:
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        sex_assigned_at_birth:
          $ref: "#/components/schemas/AssignedSex"
          nullable: true
        state_of_residence:
          $ref: "#/components/schemas/State"
          nullable: true
        zip_code:
          type: string
          nullable: true
        reference_id:
          type: string
          nullable: true
        date_of_birth:
          type: string
          format: date
          example: "2022-07-21"
          nullable: true
    PatchPatientsIdResponse:
      $ref: "#/components/schemas/Patient"
    GetPatientsIdResponse:
      $ref: "#/components/schemas/Patient"
    PostPatientsResponse:
      $ref: "#/components/schemas/Patient"
    GetPatientsResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Patient"
        count:
          type: integer
          format: int64
    Patient:
      required:
        - id
        - created_at
        - source
        - collection_page_url
      properties:
        id:
          type: string
          format: uuid
        source:
          $ref: "#/components/schemas/Source"
        created_at:
          type: string
          format: date-time
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        sex_assigned_at_birth:
          $ref: "#/components/schemas/AssignedSex"
        state_of_residence:
          $ref: "#/components/schemas/State"
        zip_code:
          type: string
        date_of_birth:
          type: string
          format: date
          example: "2022-07-21"
        collection_page_url:
          type: string
        reference_id:
          type: string
    Source:
      type: string
      enum: ["collection_page", "dashboard", "api"]
    AssignedSex:
      type: string
      enum:
        - "male"
        - "female"
    State:
      type: string
      enum:
        - "alabama"
        - "alaska"
        - "arizona"
        - "arkansas"
        - "california"
        - "colorado"
        - "connecticut"
        - "delaware"
        - "florida"
        - "georgia"
        - "hawaii"
        - "idaho"
        - "illinois"
        - "indiana"
        - "iowa"
        - "kansas"
        - "kentucky"
        - "louisiana"
        - "maine"
        - "maryland"
        - "massachusetts"
        - "michigan"
        - "minnesota"
        - "mississippi"
        - "missouri"
        - "montana"
        - "nebraska"
        - "nevada"
        - "new_hampshire"
        - "new_jersey"
        - "new_mexico"
        - "new_york"
        - "north_carolina"
        - "north_dakota"
        - "ohio"
        - "oklahoma"
        - "oregon"
        - "pennsylvania"
        - "rhode_island"
        - "south_carolina"
        - "south_dakota"
        - "tennessee"
        - "texas"
        - "utah"
        - "vermont"
        - "virginia"
        - "washington"
        - "west_virginia"
        - "wisconsin"
        - "wyoming"
    PostPatientsPayload:
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        sex_assigned_at_birth:
          $ref: "#/components/schemas/AssignedSex"
        state_of_residence:
          $ref: "#/components/schemas/State"
        zip_code:
          type: string
        date_of_birth:
          type: string
          format: date
          example: "2022-07-21"
        reference_id:
          type: string
    PatchInsuranceCardsIdPayload:
      properties:
        reference_id:
          type: string
          nullable: true
        front_photo_object_key:
          type: string
          nullable: true
        back_photo_object_key:
          type: string
          nullable: true
        member_name:
          type: string
          nullable: true
        member_id:
          type: string
          nullable: true
        group_number:
          type: string
          nullable: true
        insurance_carrier_id:
          type: string
          nullable: true
          format: uuid
        plan_name:
          type: string
          nullable: true
        rx_bin:
          type: string
          nullable: true
        rx_group:
          type: string
          nullable: true
        rx_pcn:
          type: string
          nullable: true
        dependent_names:
          type: array
          nullable: true
          items:
            type: string
    PostInsuranceCardsPayload:
      required:
        - patient_id
      properties:
        reference_id:
          type: string
        patient_id:
          type: string
          format: uuid
        front_photo_object_key:
          type: string
        back_photo_object_key:
          type: string
        member_name:
          type: string
        member_id:
          type: string
        group_number:
          type: string
        insurance_carrier_id:
          type: string
          format: uuid
        plan_name:
          type: string
        rx_bin:
          type: string
        rx_group:
          type: string
        rx_pcn:
          type: string
        dependent_names:
          type: array
          items:
            type: string
    PostInsuranceCardsResponse:
      $ref: "#/components/schemas/InsuranceCard"
    PatchInsuranceCardsIdResponse:
      $ref: "#/components/schemas/InsuranceCard"
    GetSettingsResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Settings"
        count:
          type: integer
          format: int64
    Settings:
      required:
        - id
        - created_at
        - collection_page_url
        - webhook_url
        - redirect_url
        - eligibility_checks_enabled
        # - manual_eligibility_checks_enabled
        - electronic_eligibility_check_service_type_codes
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        collection_page_url:
          type: string
        webhook_url:
          type: string
        redirect_url:
          type: string
        eligibility_checks_enabled:
          type: boolean
        # manual_eligibility_checks_enabled:
        #   type: boolean
        electronic_eligibility_check_service_type_codes:
          type: array
          items:
            $ref: "#/components/schemas/X12ServiceTypeCode"
    ElectronicEligibilityCheckStatus:
      type: string
      enum: ["pending", "success", "failure"]
    ElectronicEligibilityDiscoveryStatus:
      type: string
      enum: ["pending", "success", "failure"]
    InsurancePlanStatusValue:
      type: string
      enum: ["active", "inactive"]
    InsurancePlanStatus:
      required:
        - id
        - created_at
        - insurance_card_id
        - electronic_eligibility_check_id
        - value
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        insurance_card_id:
          type: string
          format: uuid
        electronic_eligibility_check_id:
          type: string
          format: uuid
        value:
          $ref: "#/components/schemas/InsurancePlanStatusValue"
    Extraction:
      required:
        - id
        - created_at
        - insurance_card_id
        - status
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        insurance_card_id:
          type: string
          format: uuid
        status:
          $ref: "#/components/schemas/ExtractionStatus"
        finished_at:
          type: string
          format: date-time
    GetExtractionsIdResponse:
      $ref: "#/components/schemas/Extraction"
    GetInsurancePlanStatusesResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/InsurancePlanStatus"
        count:
          type: integer
          format: int64
    GetExtractionsResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Extraction"
        count:
          type: integer
          format: int64
    PostExtractionsPayload:
      required:
        - insurance_card_id
      properties:
        insurance_card_id:
          type: string
          format: uuid
    PostExtractionsResponse:
      $ref: "#/components/schemas/Extraction"
    ClearinghouseEntity:
      required:
        - id
        - created_at
        - name
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        name:
          type: string
    InsuranceCarrier:
      required:
        - id
        - created_at
        - name
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        name:
          type: string
    ElectronicEligibilityDiscovery:
      required:
        - id
        - created_at
        - insurance_card_id
        - status
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        insurance_card_id:
          type: string
          format: uuid
        status:
          $ref: "#/components/schemas/ElectronicEligibilityDiscoveryStatus"
    GetElectronicEligibilityDiscoveriesIdResponse:
      $ref: "#/components/schemas/ElectronicEligibilityDiscovery"
    GetInsuranceCarriersResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/InsuranceCarrier"
        count:
          type: integer
          format: int64
    GetClearinghouseEntitiesResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ClearinghouseEntity"
        count:
          type: integer
          format: int64
    GetElectronicEligibilityDiscoveriesResponse:
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ElectronicEligibilityDiscovery"
        count:
          type: integer
          format: int64
    PostElectronicEligibilityDiscoveriesPayload:
      required:
        - insurance_card_id
        - provider_npi
      properties:
        insurance_card_id:
          type: string
          format: uuid
        provider_npi:
          type: string
    PostElectronicEligibilityDiscoveriesResponse:
      $ref: "#/components/schemas/ElectronicEligibilityDiscovery"
    PostElectronicEligibilityChecksPayload:
      required:
        - insurance_card_id
        - provider_npi
        - clearinghouse_entity_id
        - service_type_code
      properties:
        insurance_card_id:
          type: string
          format: uuid
        provider_npi:
          type: string
        clearinghouse_entity_id:
          type: string
          format: uuid
        service_type_code:
          $ref: "#/components/schemas/X12ServiceTypeCode"
    PostElectronicEligibilityChecksResponse:
      $ref: "#/components/schemas/ElectronicEligibilityDiscovery"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: >-
        The Opkit API uses the HTTP Bearer Token scheme for authentication. You should provide your API key in the Authorization header like so: "Authorization: Bearer [api-key]".
security:
  - bearerAuth: []
